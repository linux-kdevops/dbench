VERSION=4.00

srcdir=@srcdir@
VPATH=@srcdir@

prefix=@prefix@
datarootdir = @datarootdir@
exec_prefix=@exec_prefix@
bindir=@bindir@
mandir=@mandir@
datadir=@datadir@
docdir=@datadir@/doc/dbench
XSLTPROC = /usr/bin/xsltproc
INSTALLCMD=@INSTALL@
LIBS=@LIBS@ -lpopt -lz @LIBSMBCLIENT@ @LIBISCSI@
DESTDIR=/
CC=@CC@
CFLAGS=@CFLAGS@ -I. -DVERSION=\"$(VERSION)\" -DDATADIR=\"$(datadir)\"
CFLAGS+=`pkg-config --cflags libtirpc`
# Allows comments to be used for fallthrough
CFLAGS+=-Wimplicit-fallthrough=2
CFLAGS_RPCGEN=-Wno-unused-variable
CFLAGS_RPCGEN+=-Wno-cast-function-type
SMBCFLAGS=-Wno-deprecated-declarations
SMBCFLAGS+=`pkg-config --cflags smbclient`
LIBS+=`pkg-config --libs libtirpc`
EXEEXT=@EXEEXT@

LIBNFS_OBJ = libnfs.o mount_client.o nfs_client.o mount_xdr.o nfs_xdr.o

DB_OBJS = fileio.o util.o dbench.o child.o system.o snprintf.o sockio.o nfsio.o libnfs.a socklib.o @LINUXSCSI@ iscsi.o libiscsi.o @SMBO@
SRV_OBJS = util.o tbench_srv.o socklib.o

ifeq ($(V),1)
	export Q=
	export NQ=true
else
	export Q=@
	export NQ=@echo
endif

all: dbench doc

%.o: %.c dbench.h
	$(NQ) '   CC    ' $@
	$(Q)$(CC) -c $(CPPFLAGS) $(CFLAGS) -o $@ $<

dbench: $(DB_OBJS)
	$(NQ) '   LD    ' $@
	$(Q)$(CC) $(CFLAGS) -o $@ $(DB_OBJS) $(LIBS)

tbench_srv: $(SRV_OBJS)
	$(NQ) '   CC    ' $@
	$(Q)$(CC) -o $@ $(SRV_OBJS) $(LIBS)

tbench: dbench
	$(NQ) '   LN    ' $@
	$(Q)ln -sf dbench tbench

libnfs.a: $(LIBNFS_OBJ) 
	$(NQ) '   AR    ' $@
	$(Q)ar r libnfs.a $(LIBNFS_OBJ)
	$(Q)ranlib libnfs.a

nfsio.o: nfsio.c mount.h nfs.h
	$(NQ) '   CC    ' $@
	$(Q)gcc -g $(CFLAGS) -c nfsio.c -o $@

libnfs.o: libnfs.c libnfs.h mount.h nfs.h
	$(NQ) '   CC    ' $@
	$(Q)gcc -g $(CFLAGS) -c libnfs.c -o $@

smb.o: smb.c dbench.h
	$(NQ) '   CC    ' $@
	$(Q)$(CC) -c $(CPPFLAGS) $(CFLAGS) $(SMBCFLAGS) -o $@ $<

mount.h: mount.x
	$(NQ) ' RPCGEN  ' $@
	$(Q)rpcgen -h mount.x > mount.h

nfs.h: nfs.x
	$(NQ) '   CC    ' $@
	$(Q)rpcgen -h nfs.x > nfs.h

mount_xdr.o: mount_xdr.c mount.h
	$(NQ) '   CC    ' $@
	$(Q)gcc -g $(CFLAGS) $(CFLAGS_RPCGEN) -c mount_xdr.c -o $@

mount_xdr.c: mount.x
	$(NQ) ' RPCGEN  ' $@
	$(Q)rpcgen -c mount.x > mount_xdr.c

mount_client.o: mount_client.c mount.h
	$(NQ) '   CC    ' $@
	$(Q)gcc -g $(CFLAGS) $(CFLAGS_RPCGEN) -c mount_client.c -o $@

mount_client.c: mount.x
	$(NQ) ' RPCGEN  ' $@
	$(Q)rpcgen -l mount.x > mount_client.c

nfs_xdr.o: nfs_xdr.c nfs.h
	$(NQ) '   CC    ' $@
	$(Q)gcc $(CFLAGS) $(CFLAGS_RPCGEN) -g -c nfs_xdr.c -o $@

nfs_xdr.c: nfs.x
	$(NQ) ' RPCGEN  ' $@
	$(Q)rpcgen -c nfs.x > nfs_xdr.c

nfs_client.o: nfs_client.c nfs.h
	$(NQ) '   CC    ' $@
	$(Q)gcc -g $(CFLAGS) $(CFLAGS_RPCGEN) -c nfs_client.c -o $@

nfs_client.c: nfs.x
	$(NQ) ' RPCGEN  ' $@
	$(Q)rpcgen -l nfs.x > nfs_client.c

doc/dbench.1.html: doc/dbench.1.xml
	$(NQ) 'GEN-HTML ' $@
	$(Q)-test -z "$(XSLTPROC)" || $(XSLTPROC) -o $@ http://docbook.sourceforge.net/release/xsl/current/html/docbook.xsl $<

doc/dbench.1: doc/dbench.1.xml
	$(NQ) 'GEN-MAN  ' $@
	$(Q)-test -z "$(XSLTPROC)" || $(XSLTPROC) -o $@ http://docbook.sourceforge.net/release/xsl/current/manpages/docbook.xsl $<

doc: doc/dbench.1 doc/dbench.1.html

# Careful here: don't install client.txt over itself.
install: all
	$(NQ) ' INSTALL ' $@
	$(Q)mkdir -p $(DESTDIR)$(bindir)
	$(Q)mkdir -p $(DESTDIR)$(docdir)/loadfiles
	$(Q)mkdir -p $(DESTDIR)$(mandir)/man1
	$(Q)${INSTALLCMD} dbench $(DESTDIR)$(bindir)
	$(Q)${INSTALLCMD} loadfiles/client.txt $(DESTDIR)$(docdir)/loadfiles
	$(Q)${INSTALLCMD} loadfiles/nfs.txt $(DESTDIR)$(docdir)/loadfiles
	$(Q)${INSTALLCMD} loadfiles/nfs_2.txt $(DESTDIR)$(docdir)/loadfiles
	$(Q)${INSTALLCMD} loadfiles/smb.txt $(DESTDIR)$(docdir)/loadfiles
	$(Q)${INSTALLCMD} loadfiles/smb_1.txt $(DESTDIR)$(docdir)/loadfiles
	$(Q)${INSTALLCMD} loadfiles/smb_2.txt $(DESTDIR)$(docdir)/loadfiles
	$(Q)${INSTALLCMD} loadfiles/smb_3.txt $(DESTDIR)$(docdir)/loadfiles
	$(Q)${INSTALLCMD} loadfiles/iscsi.txt $(DESTDIR)$(docdir)/loadfiles
	$(Q)${INSTALLCMD} loadfiles/scsi.txt $(DESTDIR)$(docdir)/loadfiles
	$(Q)${INSTALLCMD} -m644 dbench.1 $(DESTDIR)$(mandir)/man1

clean:
	$(NQ) '  CLEAN  ' $@
	$(Q)rm -f *.[ao] *~ dbench tbench_srv
	$(Q)rm -f mount.h mount_xdr.c mount_client.c
	$(Q)rm -f nfs.h nfs_xdr.c nfs_client.c

proto:
	$(NQ) ' MKPROTO ' $@
	$(Q)./mkproto.pl *.c > proto.h
